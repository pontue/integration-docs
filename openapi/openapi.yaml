openapi: 3.1.0
info:
  description: Documentação de Integração da Plataforma Pontue
  version: 2.1.0
  title: Pontue Integration Docs
  contact:
    email: fernandocandiani@pontue.com.br
    name: Fernando Candiani
  license:
    name: Proprietary
    url: https://pontue.com.br
servers:
 - url: https://api.dev.pontue.com.br
components:
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ResponseError:
      properties:
        message:
          type: string
          description: Descrição do erro.
tags:
  - name: OAuth
    description: Operações de autenticação via OAuth
  - name: Proposal
    description: Operações de propostas
  - name: Essay
    description: Operações de redações
  - name: School Class
    description: Operações de turmas
  - name: Student
    description: Operações de alunos
  - name: Webhook
    description: Operações de webhooks para envio das redações corrigidas
paths:
  /oauth/token:
    post:
      operationId: oauthToken
      tags:
        - OAuth
      summary: Obtém um token de acesso
      description: Obtém um token de acesso para fazer o login de um usuário.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  description: "O tipo de concessão da solicitação de token (<strong>Utilize</strong>: `client_credentials`)."
                  default: client_credentials
                client_id:
                  type: string
                  description: ID fornecido pela nossa equipe de TI.
                client_secret:
                  type: string
                  description: Token fornecido pela nossa equipe de TI.
              required:
                - grant_type
                - client_id
                - client_secret
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                properties:
                  token_type:
                    type: string
                    description: Tipo do token.
                  expires_in:
                    type: integer
                    description: Tempo de duração do token (em segundos).
                  access_token:
                    type: string
                    description: Token de acesso.
        401:
          description: Erro de autenticação
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    description: Tipo do erro.
                  error_description:
                    type: string
                    description: Descrição do erro.
                  message:
                    type: string
                    description: Mensagem do erro.
  /integrations/auth:
    post:
      operationId: authenticate
      tags:
        - OAuth
      summary: Login na Plataforma Pontue
      description: "
        Obtém dados de acesso do usuário.<br>
        No Header Authorization, utilizar o `token_type` + `access_token` retornado pelo endpoint `/oauth/token`. <br>
        <strong>Exemplo</strong>: `Authorization: Bearer eyJ0eXAiOiJ...`.<br>
        <strong>Porém, aqui na documentação, adicione apenas o `access_token`, pois o `token_type` é adicionado automaticamente</strong>.
      "
      security:
        - Authorization:
            - read
            - write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Email do usuário cadastrado na Plataforma Pontue.
              required:
                - email
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: string
                            description: ID do usuário.
                          name:
                            type: string
                            description: Nome do usuário.
                          email:
                            type: string
                            description: Email do usuário.
                      role:
                        type: string
                        description: Nível de acesso do usuário.
                      student:
                        type: object
                        description: Caso o usuário seja um aluno
                        properties:
                          id:
                            type: string
                            description: ID do aluno.
                      school:
                        type: object
                        properties:
                          id:
                            type: string
                            description: ID da escola.
                          name:
                            type: string
                            description: Nome da escola.
                          isSaas:
                            type: integer
                            description: Tipo de modelo de negócio da escola.
                          isOnTrial:
                            type: boolean
                            description: Indica se a escola está em modo de teste.
                      schoolClass:
                        type: object
                        description: Caso o usuário seja um aluno
                        properties:
                          id:
                            type: string
                            description: ID da turma.
                      modules:
                        type: array
                        description: Módulos ativos da escola.
                        items:
                          type: string
                      access_token:
                        type: string
                        description: Token de acesso.
                      token_type:
                        type: string
                        description: Tipo do token.
                      expires_at:
                        type: string
                        description: Data de expiração do token (Y-m-d H:i:s).
                  meta:
                    type: object
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /integrations/proposal/create:
    post:
      operationId: createProposal
      tags:
        - Proposal
      summary: Criação de proposta
      description:
        <strong>OBS:</strong> Utilize o `access_token` retornado pelo endpoint `/oauth/token` para autenticação.
      security:
        - Authorization:
            - read
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: O nome da proposta
                gridId:
                  type: string
                  format: uuid
                  description: ID da grade da proposta
                subjectId:
                  type: string
                  format: uuid
                  description: O ID da disciplina (caso a proposta seja disponibilizada para uma disciplina)
                hasTask:
                  type: boolean
                  description: Indica se a proposta possui tarefa ou não
                  default: true
                isPontueCorrection:
                  type: boolean
                  description: Indica se a proposta é vai ser corrigida pelos time de corretores Pontue (utilize `true`) ou pelos professores da escola (utilize `false`)
                  default: false
                guidance:
                  type: string
                  description: Orientação para o corretor.
                comment:
                  type: string
                  description: Orientação para o aluno.
                file_labels:
                  type: array
                  description:
                    Labels dos arquivos.
                    Campo obrigatório se enviado arquivos.
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        description: ID do arquivo (explicado no atributo 'file-1').
                      label:
                        type: string
                        description: Título do arquivo que será apresentado ao usuário.
                      name:
                        type: string
                        description: O nome do arquivo que o usuário fez o upload.
                file-1:
                  type: string
                  format: binary
                  description: "
                    Arquivo para a proposta.<br><br>
                    <strong>Campo obrigatório se não enviado links.</strong><br>
                    <strong>Formatos permitidos: pdf, jpg, jpeg e png.</strong><br><br>
                    O `1` descrito no final do nome deste campo é o ID do arquivo especificado no campo `file_labels`.<br><br>
                    <strong>Exemplo</strong>:<br>
                    Com `file_labels[0].id: 'nomeDoArquivo1'`, o arquivo deve ter ser enviado com o seguinte nome do campo: `file-nomeDoArquivo1`.<br>
                    Com `file_labels[1].id: 'nomeDoArquivo2'`, o arquivo deve ter ser enviado com o seguinte nome do campo: `file-nomeDoArquivo2`.<br>
                  "
                file-2:
                  type: string
                  format: binary
                  description: "
                    Arquivo para a proposta.<br><br>
                    <strong>Campo obrigatório se não enviado links.</strong><br>
                    <strong>Formatos permitidos: pdf, jpg, jpeg e png.</strong><br><br>
                    O `2` descrito no final do nome deste campo é o ID do arquivo especificado no campo `file_labels`.<br><br>
                    <strong>Exemplo</strong>:<br>
                    Com `file_labels[0].id: 'nomeDoArquivo1'`, o arquivo deve ter ser enviado com o seguinte nome do campo: `file-nomeDoArquivo1`.<br>
                    Com `file_labels[1].id: 'nomeDoArquivo2'`, o arquivo deve ter ser enviado com o seguinte nome do campo: `file-nomeDoArquivo2`.<br>
                  "
                links:
                  type: array
                  description:
                    Links para a proposta.
                    Campo obrigatório se não enviado arquivos.
                  items:
                    type: object
                    properties:
                      url:
                        type: string
                        description: URL do link.
                      label:
                        type: string
                        description: Título do link que será apresentado ao usuário.
              required:
                - name
                - gridId
      responses:
        201:
          description: Created.
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      proposalId:
                        type: string
                        description: ID da proposta criada.
                  meta:
                    type: object
        400:
          description: Bad Request. Arquivo ou link inválido.
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: File is not valid.
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /integrations/proposal/{proposalId}:
    get:
      operationId: showProposal
      tags:
        - Proposal
      summary: Show de proposta
      description:
        <strong>OBS:</strong> Utilize o `access_token` retornado pelo endpoint `/oauth/token` para autenticação.
      security:
        - Authorization:
            - read
      parameters:
        - in: path
          name: proposalId
          schema:
            type: string
            format: uuid
          description: ID da proposta
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: ID da proposta.
                      name:
                        type: string
                        description: Nome da proposta.
                      school:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            description: ID da escola.
                          name:
                            type: string
                            description: Nome da escola.
                      number:
                        type: integer
                        description: Número da proposta.
                      guidance:
                        type: string
                        description: Orientação para o corretor.
                      comment:
                        type: string
                        description: Orientação para o aluno.
                      hasTask:
                        type: boolean
                        description: Indica se a proposta possui tarefa ou não.
                      isPontueCorrection:
                        type: boolean
                        description: Indica se a proposta é vai ser corrigida pelos time de corretores Pontue (`true`) ou pelos professores da escola (`false`).
                      subject:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            description: ID da disciplina.
                          name:
                            type: string
                            description: Nome da disciplina.
                      teachers:
                        type: array
                        description: Professores da disciplina da proposta.
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                              description: ID do professor.
                            name:
                              type: string
                              description: Nome do professor.
                      schoolClasses:
                        type: array
                        description: Turmas que a proposta está disponibilizada.
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                              description: ID da turma.
                            name:
                              type: string
                              description: Nome da turma.
                      grid:
                        type: object
                        description: Grade da proposta.
                        properties:
                          id:
                            type: string
                            format: uuid
                            description: ID da grade.
                          name:
                            type: string
                            description: Nome da grade.
                      links:
                        type: array
                        description: Links da proposta.
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                              description: ID do link.
                            url:
                              type: string
                              description: URL do link.
                            label:
                              type: string
                              description: Título do link que será apresentado ao usuário.
                            name:
                              type: string
                              description: Nome do link.
                      files:
                        type: array
                        description: Arquivos da proposta.
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                              description: ID do arquivo.
                            url:
                              type: string
                              description: URL do arquivo.
                            label:
                              type: string
                              description: Título do arquivo que será apresentado ao usuário.
                            name:
                              type: string
                              description: Nome do arquivo.
                  meta:
                    type: object
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    post:
      operationId: updateProposal
      tags:
        - Proposal
      summary: Update de proposta
      description:
        <strong>OBS:</strong> Utilize o `access_token` retornado pelo endpoint `/oauth/token` para autenticação.
      security:
        - Authorization:
            - read
      parameters:
        - in: path
          name: proposalId
          schema:
            type: string
            format: uuid
          description: ID da proposta
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: O nome da proposta
                gridId:
                  type: string
                  format: uuid
                  description: ID da grade da proposta
                subjectId:
                  type: string
                  format: uuid
                  description: O ID da disciplina (caso a proposta seja disponibilizada para uma disciplina)
                hasTask:
                  type: boolean
                  description: Indica se a proposta possui tarefa ou não
                  default: true
                isPontueCorrection:
                  type: boolean
                  description: Indica se a proposta é vai ser corrigida pelos time de corretores Pontue (utilize `true`) ou pelos professores da escola (utilize `false`)
                  default: false
                guidance:
                  type: string
                  description: Orientação para o corretor.
                comment:
                  type: string
                  description: Orientação para o aluno.
                file_labels:
                  type: array
                  description:
                    Labels dos arquivos.<br>
                    <strong>Campo obrigatório se enviado arquivos.</strong><br>
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        description: ID do arquivo (explicado no atributo 'file-1').
                      label:
                        type: string
                        description: Título do arquivo que será apresentado ao usuário.
                      name:
                        type: string
                        description: O nome do arquivo que o usuário fez o upload.
                file-1:
                  type: string
                  format: binary
                  description: "
                    Arquivo para a proposta.<br><br>
                    <strong>Formatos permitidos: pdf, jpg, jpeg e png.</strong><br><br>
                    O `1` descrito no final do nome deste campo é o ID do arquivo especificado no campo `file_labels`.<br><br>
                    <strong>Exemplo</strong>:<br>
                    Com `file_labels[0].id: 'nomeDoArquivo1'`, o arquivo deve ter ser enviado com o seguinte nome do campo: `file-nomeDoArquivo1`.<br>
                    Com `file_labels[1].id: 'nomeDoArquivo2'`, o arquivo deve ter ser enviado com o seguinte nome do campo: `file-nomeDoArquivo2`.<br>
                  "
                file-2:
                  type: string
                  format: binary
                  description: "
                    Arquivo para a proposta.<br><br>
                    <strong>Formatos permitidos: pdf, jpg, jpeg e png.</strong><br><br>
                    O `2` descrito no final do nome deste campo é o ID do arquivo especificado no campo `file_labels`.<br><br>
                    <strong>Exemplo</strong>:<br>
                    Com `file_labels[0].id: 'nomeDoArquivo1'`, o arquivo deve ter ser enviado com o seguinte nome do campo: `file-nomeDoArquivo1`.<br>
                    Com `file_labels[1].id: 'nomeDoArquivo2'`, o arquivo deve ter ser enviado com o seguinte nome do campo: `file-nomeDoArquivo2`.<br>
                  "
                removeIds:
                  type: array
                  description: "
                    Array de `IDs` dos arquivos/links que serão removidos.<br>
                  "
                  items:
                    type: string
                    format: uuid
                    description: ID do arquivo/link que será removido.
                links:
                  type: array
                  description:
                    Links para a proposta.<br>
                  items:
                    type: object
                    properties:
                      url:
                        type: string
                        description: URL do link.
                      label:
                        type: string
                        description: Título do link que será apresentado ao usuário.
              required:
                - name
                - gridId
      responses:
        200:
          description: Created.
          content:
            application/json:
              schema:
                type: object
        400:
          description: Bad Request. Arquivo ou link inválido ou nome da proposta não foi enviado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        403:
          description: Forbidden. Ou a proposta é de outra escola ou a proposta possui redações corrigidas.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /integrations/proposal/{proposalId}/delete:
    post:
      operationId: deleteProposal
      tags:
        - Proposal
      summary: Delete de proposta
      description:
        <strong>OBS:</strong> Utilize o `access_token` retornado pelo endpoint `/oauth/token` para autenticação.
      security:
        - Authorization:
            - read
      parameters:
        - in: path
          name: proposalId
          schema:
            type: string
            format: uuid
          description: ID da proposta
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                maxItems: 0
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /integrations/proposal/{proposalId}/makeAvailable:
    post:
      operationId: proposalMakeAvailable
      tags:
        - Proposal
      summary: Liberar propostas
      description:
        Liberar propostas para turmas ou disciplina.<br>
        <strong>OBS:</strong> Utilize o `access_token` retornado pelo endpoint `/oauth/token` para autenticação.<br>
        <strong>OBS:</strong> se enviado disciplina e as turmas, dará preferência pra disciplina.
      security:
        - Authorization:
            - read
      parameters:
        - in: path
          name: proposalId
          schema:
            type: string
            format: uuid
          description: ID da proposta
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subjectId:
                  type: string
                  format: uuid
                  description: ID da disciplina
                schoolClasses:
                  type: array
                  description: Array de objetos com os ID's das turmas
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                releaseAt:
                  type: string
                  description: "
                    Data que a proposta deve ser <strong>liberada</strong>.<br>
                    <strong>Formato:</strong> DD/MM/YYYY HH:mm:ss (Ex.: 23/09/2022 08:00:00)
                  "
                removeAt:
                  type: string
                  description: "
                    Data que a proposta deve ser <strong>removida</strong>.<br>
                    <strong>Formato:</strong> DD/MM/YYYY HH:mm:ss (Ex.: 23/09/2022 08:00:00)
                  "
      responses:
        204:
          description: Not Content.
        400:
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /integrations/essay/create:
    post:
      operationId: createEssay
      tags:
        - Essay
      summary: Criação de redação
      description:
        <strong>OBS:</strong> Utilize o `access_token` retornado pelo endpoint `/oauth/token` para autenticação.
      security:
        - Authorization:
            - read
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                proposalId:
                  type: string
                  format: uuid
                  description: ID da proposta.
                studentId:
                  type: string
                  format: uuid
                  description: ID do aluno.
                files:
                  type: array
                  description:
                    Arquivos com as imagens da redação (redação por foto).<br>
                    <strong>Obrigatório se não enviado `essayTypedText`.</strong><br>
                    <strong>Se enviado junto com `essayTypedText`, esse campo terá preferência!</strong>
                  items:
                    type: string
                    format: binary
                essayTypedText:
                  type: string
                  description:
                    Texto digitado pelo aluno (redação digitada).<br>
                    <strong>Obrigatório se não enviado `files`.</strong><br>
                    <strong>Se enviado junto com `files`, dará preferência para `files`!</strong>
                type:
                  type: object
                  description: "
                      Tipo da redação.<br><br>
                      <strong>type</strong>: (string) Tipo da redação (rewriting ou secondView).<br>
                      <strong>acceptedTerms</strong>: (boolean) Indica se o aluno aceitou os termos de uso do envio da reescrita da redação.<br>
                      <strong>gradeReason</strong>: (string) Motivo da nota para segunda vista da redação.<br>
                      <strong>correctorReason</strong>: (string) Motivo para o corretor para segunda vista da redação.<br>
                  "
                  properties:
                    type:
                      type: string
                    acceptedTerms:
                      type: boolean
                    gradeReason:
                      type: string
                    correctorReason:
                      type: string
              required:
                - proposalId
                - studentId
      responses:
        201:
          description: Created.
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      essay:
                        type: object
                        properties:
                          id:
                            type: string
                            description: ID da redação criada.
                          urls:
                            type: array
                            description: URLs das folhas da redação.
                            items:
                              type: object
                              properties:
                                url:
                                  type: string
                                  description: URL da folha.
                                order:
                                  type: integer
                                  description: Ordem da folha.
                          children:
                            type: array
                            description: Se o plano da escola estiver configurado para ter mais de 1 correção por redação, esse campo será retornado com todas as redações vinculadas.
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                  description: ID da redação criada.
                                urls:
                                  type: array
                                  description: URLs das folhas da redação.
                                  items:
                                    type: object
                                    properties:
                                      url:
                                        type: string
                                        description: URL da folha.
                                      order:
                                        type: integer
                                        description: Ordem da folha.
                  meta:
                    type: object
        400:
          description: Bad Request. Arquivo ou link inválido.
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: File is not valid.
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /integrations/essay/{essayId}:
    get:
      operationId: showEssay
      tags:
        - Essay
      summary: Show de redação
      description:
        <strong>OBS:</strong> Utilize o `access_token` retornado pelo endpoint `/oauth/token` para autenticação.
      security:
        - Authorization:
            - read
      parameters:
        - in: path
          name: essayId
          schema:
            type: string
            format: uuid
          description: ID da redação
      responses:
        200:
          description: Ok.
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: ID da redação.
                      number:
                        type: integer
                        description: Número da redação.
                      student:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            description: ID do aluno.
                          name:
                            type: string
                            description: Nome do aluno.
                          schoolClass:
                            type: object
                            properties:
                              id:
                                type: string
                                format: uuid
                                description: ID da turma.
                              name:
                                type: string
                                description: Nome da turma.
                              school:
                                type: object
                                properties:
                                  id:
                                    type: string
                                    format: uuid
                                    description: ID da escola.
                                  name:
                                    type: string
                                    description: Nome da escola.
                      proposal:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            description: ID da proposta.
                          name:
                            type: string
                            description: Nome da proposta.
                          number:
                            type: integer
                            description: Número da proposta.
                          grid:
                            type: object
                            properties:
                              id:
                                type: string
                                format: uuid
                                description: ID da grade.
                              name:
                                type: string
                                description: Nome da grade.
                      essayImages:
                        type: array
                        description: Imagens da redação.
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                              description: ID da imagem.
                            order:
                              type: integer
                              description: Ordem da imagem.
                            url:
                              type: string
                              format: url
                              description: URL da imagem.
                            annotations:
                              type: string
                              description: Anotações da correção (no format JSON).
                              x-nullable: true
                              format: json
                            comments:
                              type: string
                              description: Comentários da correção (no format JSON).
                              x-nullable: true
                              format: json
                      children:
                        type: array
                        description: Se o plano da escola estiver configurado para ter mais de 1 correção por redação, esse campo será retornado com todas as redações vinculadas.
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                              description: ID da redação.
                            number:
                              type: integer
                              description: Número da redação.
                            student:
                              type: object
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                  description: ID do aluno.
                                name:
                                  type: string
                                  description: Nome do aluno.
                                schoolClass:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                      format: uuid
                                      description: ID da turma.
                                    name:
                                      type: string
                                      description: Nome da turma.
                                    school:
                                      type: object
                                      properties:
                                        id:
                                          type: string
                                          format: uuid
                                          description: ID da escola.
                                        name:
                                          type: string
                                          description: Nome da escola.
                            proposal:
                              type: object
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                  description: ID da proposta.
                                name:
                                  type: string
                                  description: Nome da proposta.
                                number:
                                  type: integer
                                  description: Número da proposta.
                                grid:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                      format: uuid
                                      description: ID da grade.
                                    name:
                                      type: string
                                      description: Nome da grade.
                            essayImages:
                              type: array
                              description: Imagens da redação.
                              items:
                                type: object
                                properties:
                                  id:
                                    type: string
                                    format: uuid
                                    description: ID da imagem.
                                  order:
                                    type: integer
                                    description: Ordem da imagem.
                                  url:
                                    type: string
                                    format: url
                                    description: URL da imagem.
                                  annotations:
                                    type: string
                                    description: Anotações da correção (no format JSON).
                                    x-nullable: true
                                    format: json
                                  comments:
                                    type: string
                                    description: Comentários da correção (no format JSON).
                                    x-nullable: true
                                    format: json
                      zeroReason:
                        type: object
                        description: Zerar redação. Se a redação não for zerada, esse campo será `null`.
                        x-nullable: true
                        properties:
                          id:
                            type: string
                            format: uuid
                            description: ID da justificativa para zerar redação.
                          reason:
                            type: string
                            description: Nome da justificativa para zerar redação.
                  meta:
                    type: object
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    post:
      operationId: updateEssay
      tags:
        - Essay
      summary: Update de redação
      description:
        <strong>OBS:</strong> Utilize o `access_token` retornado pelo endpoint `/oauth/token` para autenticação.
      security:
        - Authorization:
            - read
      parameters:
        - in: path
          name: essayId
          schema:
            type: string
            format: uuid
          description: ID da redação
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                proposalId:
                  type: string
                  format: uuid
                  description: ID da proposta.
                files:
                  type: array
                  description:
                    Arquivos com as imagens da redação (redação por foto).<br>
                    <strong>Se enviado junto com `essayTypedText`, esse campo terá preferência!</strong>
                  items:
                    type: string
                    format: binary
                essayTypedText:
                  type: string
                  description:
                    Texto digitado pelo aluno (redação digitada).<br>
                    <strong>Se enviado junto com `files`, dará preferência para `files`!</strong>
                urls:
                  type: array
                  description:
                    Array com os ID's e a ordem das imagens que irá <strong>MANTER</strong> na redação.<br>
                    Caso queira que a imagem não seja mantida, não envie o ID dela nesse array.<br>
                    Lembrando que deverá permanecer pelo menos uma imagem na redação.<br>
                    <strong><em>Caso não seja enviado esse campo, nenhuma imagem será apagada.</em> (Será atualizado em breve para caso envie novas imagens e não enviar esse campo, apagar todas as imagens existentes)</strong>
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: ID da imagem.
                      order:
                        type: integer
                        description: Ordem da imagem.
                orders:
                  type: object
                  description:
                    Objeto com os nomes dos novos arquivos (com o tipo do arquivo) que serão adicionados e a ordem que o arquivo deverá permanecer na redação.<br>
                    <strong>OBRIGATÓRIO</strong> se enviado `files` (novos arquivos).
                  properties:
                    nomeDoArquivo.tipoDoArquivo:
                      type: number
                      description: '
                        Nome do arquivo e tipo do arquivo, com a ordem que deseja que a imagem fique na redação.<br>
                        Exemplo: "imagem.jpg": 1
                      '
              required:
                - proposalId
      responses:
        200:
          description: Ok.
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: ID da redação.
                      student:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            description: ID do aluno.
                          name:
                            type: string
                            description: Nome do aluno.
                          schoolClass:
                            type: object
                            properties:
                              id:
                                type: string
                                format: uuid
                                description: ID da turma.
                              name:
                                type: string
                                description: Nome da turma.
                              school:
                                type: object
                                properties:
                                  id:
                                    type: string
                                    format: uuid
                                    description: ID da escola.
                                  name:
                                    type: string
                                    description: Nome da escola.
                      proposal:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            description: ID da proposta.
                          name:
                            type: string
                            description: Nome da proposta.
                      essayImages:
                        type: array
                        description: Imagens da redação.
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                              description: ID da imagem.
                            url:
                              type: string
                              description: URL da imagem.
                            order:
                              type: integer
                              description: Ordem da imagem.
                  meta:
                    type: object
        400:
          description: Bad Request. Arquivo ou link inválido.
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: File is not valid.
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /integrations/essay/{essayId}/delete:
    post:
      operationId: deleteEssay
      tags:
        - Essay
      summary: Delete de redação
      description:
        <strong>OBS:</strong> Utilize o `access_token` retornado pelo endpoint `/oauth/token` para autenticação.
      security:
        - Authorization:
            - read
      parameters:
        - in: path
          name: essayId
          schema:
            type: string
            format: uuid
          description: ID da redação
      responses:
        200:
          description: Ok.
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /integrations/essay/{essayId}/getImages:
    get:
      operationId: getImagesEssay
      tags:
        - Essay
      summary: Obtém as imagens de uma redação corrigida
      description:
        Obtém as imagens de uma redação <strong>corrigida e não reportada</strong>.<br>
        <strong>OBS:</strong> Utilize o `access_token` retornado pelo endpoint `/oauth/token` para autenticação.
      security:
        - Authorization:
            - read
      parameters:
        - in: path
          name: essayId
          schema:
            type: string
            format: uuid
          description: ID da redação
      responses:
        200:
          description: Ok.
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      image:
                        type: string
                        format: uuid
                        description: ID da redação.
                      essayImages:
                        type: array
                        description: Imagens da redação.
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: base64
                              description: Imagem corrigida em base64.
                            comments:
                              type: string
                              description: Comentários da correção (no format JSON).
                              x-nullable: true
                              format: json
                            order:
                              type: integer
                              description: Ordem da imagem.
                  meta:
                    type: object
        400:
          description: Bad Request.
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    description: "`This essay is uncorrected.` ou `This essay has been reported.`"
        401:
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    description: Internal server error.
  /integrations/schoolClasses/create:
    post:
      operationId: createschoolClass
      tags:
        - School Class
      summary: Criação de turma
      description:
        <strong>OBS:</strong> Utilize o `access_token` retornado pelo endpoint `/oauth/token` para autenticação.
      security:
        - Authorization:
            - read
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                schoolClasses:
                  type: object
                  description: Array de objetos com os nomes e ID's das turmas
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                name:
                  type: string
                  description: Nome da turma.
                idRef:
                  type: string
                  description: ID da turma
              required:
                - name
                - idRef
      responses:
        201:
          description: Created.
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      schoolClasses:
                        type: object
                        properties:
                          schoolClass:
                            type: object
                            properties:
                              id:
                                type: string
                                description: ID da turma criada.
                              nome:
                                type: string
                                description: Nome da turma.
                              idRef:
                                type: string
                                description: ID de referência da turma.
                  meta:
                    type: object
        400:
          description: Bad Request.
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: School Classes already exists.
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: Unauthorized.
  /integrations/schoolClasses/{schoolClassId}:
    get:
      operationId: showSchoolClass
      tags:
        - School Class
      summary: Show de turma
      description:
        <strong>OBS:</strong> Utilize o `access_token` retornado pelo endpoint `/oauth/token` para autenticação.
      security:
        - Authorization:
            - read
      parameters:
        - in: path
          name: schoolClassId
          schema:
            type: string
            format: uuid
          description: ID da turma
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: ID da turma.
                      name:
                        type: string
                        description: Nome da turma.
                      idRef:
                        type: string
                        description: ID de referência da turma.
                      students:
                        type: number
                        description: Quantidade de alunas da turma.
                        default: 21
                      createdAt:
                        type: string
                        description: Data de criação.
                        default: 2025-02-07T13:19:06.000-03:00
                      updatedAt:
                        type: string
                        description: Data do último update.
                        default: 2025-02-07T13:19:06.000-03:00
                  meta:
                    type: object
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    post:
      operationId: updateShoolClass
      tags:
        - School Class
      summary: Update de turma
      description:
        <strong>OBS:</strong> Utilize o `access_token` retornado pelo endpoint `/oauth/token` para autenticação.
      security:
        - Authorization:
            - read
      parameters:
        - in: path
          name: schoolClassId
          schema:
            type: string
            format: uuid
          description: ID da turma
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: O nome da turma
              required:
                - name
      responses:
        200:
          description: Ok.
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: ID da turma.
                      name:
                        type: string
                        description: Nome da turma.
                      idRef:
                        type: string
                        description: ID de referência da turma.
                      createdAt:
                        type: string
                        description: Data de criação.
                        default: 2025-02-07T13:19:06.000-03:00
                      updatedAt:
                        type: string
                        description: Data do último update.
                        default: 2025-02-07T13:19:06.000-03:00
                  meta:
                    type: object
        400:
          description: Bad Request. Link inválido ou nome da turma não foi enviado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    delete:
      operationId: deleteSchoolClass
      tags:
        - School Class
      summary: Delete de turma
      description:
        <strong>OBS:</strong> Utilize o `access_token` retornado pelo endpoint `/oauth/token` para autenticação.
      security:
        - Authorization:
            - read
      parameters:
        - in: path
          name: schoolClassId
          schema:
            type: string
            format: uuid
          description: ID da turma
      responses:
        200:
          description: Ok.
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: ID da turma.
                      name:
                        type: string
                        description: Nome da turma.
                      idRef:
                        type: string
                        description: ID de referência da turma.
                      createdAt:
                        type: string
                        description: Data de criação.
                        default: 2025-02-07T13:19:06.000-03:00
                      updatedAt:
                        type: string
                        description: Data do último update.
                        default: 2025-02-07T13:19:06.000-03:00
                      deletedAt:
                        type: string
                        description: Data do último update.
                        default: 2025-02-07T13:19:06.000-03:00
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /integrations/students/create:
    post:
      operationId: createStudent
      tags:
        - Student
      summary: Criação de aluno
      description:
        <strong>OBS:</strong> Utilize o `access_token` retornado pelo endpoint `/oauth/token` para autenticação.
      security:
        - Authorization:
            - read
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                schoolClassId:
                    type: string
                    format: uuid
                    description: ID da turma
                students:
                  type: object
                  description: Array de objetos com os nomes, sobrenomes, emails e ID's dos alunos
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                name:
                  type: string
                  description: Nome do aluno.
                surname:
                  type: string
                  description: Sobrenome do aluno.
                email:
                  type: string
                  description: Email do aluno.
                idRef:
                  type: string
                  description: ID do aluno
              required:
                - name
                - surname
                - email
                - idRef
      responses:
        201:
          description: Created.
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      students:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              description: ID do estudante.
                            user:
                              type: object
                              properties:
                                id:
                                  type: string
                                  description: ID do usuário.
                                name:
                                  type: string
                                  description: Nome do usuário.
                                surname:
                                  type: string
                                  description: Sobrenome do usuário.
                                fullName:
                                  type: string
                                  description: Nome completo do usuário.
                                email:
                                  type: string
                                  description: E-mail do usuário.
                                profilePicture:
                                  type: string
                                  nullable: true
                                  description: URL da foto de perfil do usuário.
                                idRef:
                                  type: string
                                  description: ID de referência do usuário.
                                createdAt:
                                  type: string
                                  format: date-time
                                  description: Data de criação do usuário.
                                  default: 2025-02-07T13:19:06.000-03:00
                                updatedAt:
                                  type: string
                                  format: date-time
                                  description: Data da última atualização do usuário.
                                  default: 2025-02-07T13:19:06.000-03:00
                                deletedAt:
                                  type: string
                                  nullable: true
                                  description: Data de exclusão do usuário (se aplicável).
                                  default: null
                            schoolClass:
                              type: object
                              properties:
                                id:
                                  type: string
                                  description: ID da turma.
                                name:
                                  type: string
                                  description: Nome da turma.
                                idRef:
                                  type: string
                                  nullable: true
                                  description: ID de referência da turma.
                            createdAt:
                              type: string
                              format: date-time
                              description: Data de criação do usuário.
                              default: 2025-02-07T13:19:06.000-03:00
                            updatedAt:
                              type: string
                              format: date-time
                              description: Data da última atualização do usuário.
                              default: 2025-02-07T13:19:06.000-03:00
                            deletedAt:
                              type: string
                              nullable: true
                              description: Data de exclusão do usuário (se aplicável).
                              default: null
                  meta:
                    type: object
        400:
          description: Bad Request.
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: Student already exists.
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: Unauthorized.
  /integrations/students/{studentId}:
    get:
      operationId: showStudent
      tags:
        - Student
      summary: Show de aluno
      description:
        <strong>OBS:</strong> Utilize o `access_token` retornado pelo endpoint `/oauth/token` para autenticação.
      security:
        - Authorization:
            - read
      parameters:
        - in: path
          name: studentId
          schema:
            type: string
            format: uuid
          description: ID da aluno
      responses:
        200:
          description: Ok.
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      student:
                        type: object
                        properties:
                          id:
                            type: string
                            description: ID do estudante.
                          user:
                            type: object
                            properties:
                              id:
                                type: string
                                description: ID do usuário.
                              name:
                                type: string
                                description: Nome do usuário.
                              surname:
                                type: string
                                description: Sobrenome do usuário.
                              fullName:
                                type: string
                                description: Nome completo do usuário.
                              email:
                                type: string
                                description: E-mail do usuário.
                              profilePicture:
                                type: string
                                nullable: true
                                description: URL da foto de perfil do usuário.
                              idRef:
                                type: string
                                description: ID de referência do usuário.
                              createdAt:
                                type: string
                                format: date-time
                                description: Data de criação do usuário.
                                default: 2025-02-07T13:19:06.000-03:00
                              updatedAt:
                                type: string
                                format: date-time
                                description: Data da última atualização do usuário.
                                default: 2025-02-07T13:19:06.000-03:00
                              deletedAt:
                                type: string
                                nullable: true
                                description: Data de exclusão do usuário (se aplicável).
                                default: null
                          schoolClass:
                            type: object
                            properties:
                              id:
                                type: string
                                description: ID da turma.
                              name:
                                type: string
                                description: Nome da turma.
                              idRef:
                                type: string
                                nullable: true
                                description: ID de referência da turma.
                          createdAt:
                            type: string
                            format: date-time
                            description: Data de criação do estudante.
                            default: 2025-02-07T13:19:06.000-03:00
                          updatedAt:
                            type: string
                            format: date-time
                            description: Data da última atualização do estudante.
                            default: 2025-02-07T13:19:06.000-03:00
                          deletedAt:
                            type: string
                            format: date-time
                            nullable: true
                            description: Data de exclusão do estudante (se aplicável).
                            default: null
                  meta:
                    type: object
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    post:
      operationId: updateStudent
      tags:
        - Student
      summary: Update de aluno
      description:
        <strong>OBS:</strong> Utilize o `access_token` retornado pelo endpoint `/oauth/token` para autenticação.
      security:
        - Authorization:
            - read
      parameters:
        - in: path
          name: studentId
          schema:
            type: string
            format: uuid
          description: ID do aluno
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                schoolClassId:
                    type: string
                    format: uuid
                    description: ID da turma
                name:
                  type: string
                  description: O nome do aluno
                surname:
                  type: string
                  description: O sobrenome do aluno
                email:
                  type: string
                  description: O email do aluno
                idRef:
                  type: string
                  description: O id de referência do aluno
                  nullable: true
              required:
                - schoolClassId
                - name
                - surname
                - email
      responses:
        200:
          description: Ok.
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      student:
                        type: object
                        properties:
                          id:
                            type: string
                            description: ID do estudante.
                          user:
                            type: object
                            properties:
                              id:
                                type: string
                                description: ID do usuário.
                              name:
                                type: string
                                description: Nome do usuário.
                              surname:
                                type: string
                                description: Sobrenome do usuário.
                              fullName:
                                type: string
                                description: Nome completo do usuário.
                              email:
                                type: string
                                description: E-mail do usuário.
                              profilePicture:
                                type: string
                                nullable: true
                                description: URL da foto de perfil do usuário.
                              idRef:
                                type: string
                                description: ID de referência do usuário.
                              createdAt:
                                type: string
                                format: date-time
                                description: Data de criação do usuário.
                                default: 2025-02-07T13:19:06.000-03:00
                              updatedAt:
                                type: string
                                format: date-time
                                description: Data da última atualização do usuário.
                                default: 2025-02-07T13:19:06.000-03:00
                              deletedAt:
                                type: string
                                nullable: true
                                description: Data de exclusão do usuário (se aplicável).
                                default: null
                          schoolClass:
                            type: object
                            properties:
                              id:
                                type: string
                                description: ID da turma.
                              name:
                                type: string
                                description: Nome da turma.
                              idRef:
                                type: string
                                nullable: true
                                description: ID de referência da turma.
                          createdAt:
                            type: string
                            format: date-time
                            description: Data de criação do estudante.
                            default: 2025-02-07T13:19:06.000-03:00
                          updatedAt:
                            type: string
                            format: date-time
                            description: Data da última atualização do estudante.
                            default: 2025-02-07T13:19:06.000-03:00
                          deletedAt:
                            type: string
                            format: date-time
                            nullable: true
                            description: Data de exclusão do estudante (se aplicável).
                            default: null
                  meta:
                    type: object
        400:
          description: Bad Request. Link inválido ou algum parâmetro do aluno não foi enviado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    delete:
      operationId: deleteStudent
      tags:
        - Student
      summary: Delete de aluno
      description:
        <strong>OBS:</strong> Utilize o `access_token` retornado pelo endpoint `/oauth/token` para autenticação.
      security:
        - Authorization:
            - read
      parameters:
        - in: path
          name: studentId
          schema:
            type: string
            format: uuid
          description: ID do aluno
      responses:
        200:
          description: Ok.
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      student:
                        type: object
                        properties:
                          id:
                            type: string
                            description: ID do estudante.
                          user:
                            type: object
                            properties:
                              id:
                                type: string
                                description: ID do usuário.
                              name:
                                type: string
                                description: Nome do usuário.
                              surname:
                                type: string
                                description: Sobrenome do usuário.
                              fullName:
                                type: string
                                description: Nome completo do usuário.
                              email:
                                type: string
                                description: E-mail do usuário.
                              profilePicture:
                                type: string
                                nullable: true
                                description: URL da foto de perfil do usuário.
                              idRef:
                                type: string
                                description: ID de referência do usuário.
                              createdAt:
                                type: string
                                format: date-time
                                description: Data de criação do usuário.
                                default: 2025-02-07T13:19:06.000-03:00
                              updatedAt:
                                type: string
                                format: date-time
                                description: Data da última atualização do usuário.
                                default: 2025-02-07T13:19:06.000-03:00
                              deletedAt:
                                type: string
                                nullable: true
                                description: Data de exclusão do usuário (se aplicável).
                                default: 2025-02-07T13:19:06.000-03:00
                          schoolClass:
                            type: object
                            properties:
                              id:
                                type: string
                                description: ID da turma.
                              name:
                                type: string
                                description: Nome da turma.
                              idRef:
                                type: string
                                nullable: true
                                description: ID de referência da turma.
                          createdAt:
                            type: string
                            format: date-time
                            description: Data de criação do estudante.
                            default: 2025-02-07T13:19:06.000-03:00
                          updatedAt:
                            type: string
                            format: date-time
                            description: Data da última atualização do estudante.
                            default: 2025-02-07T13:19:06.000-03:00
                          deletedAt:
                            type: string
                            format: date-time
                            nullable: true
                            description: Data de exclusão do estudante (se aplicável).
                            default: 2025-02-07T13:19:06.000-03:00
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /webhook:
    post:
      operationId: sendWebhook
      tags:
        - Webhook
      summary: URL para enviar os webhooks de redação corrigida
      description:
        <strong>Endpoint para receber os webhooks da Plataforma Pontue.</strong><br>
        <strong>Esse endpoint não é cadastrado no nosso sistema, é o `POST` que iremos fazer para a URL que vocês nos passarem.</strong>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                essay:
                  type: object
                  description: Redação
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: ID da redação.
                    parentId:
                      type: string
                      format: uuid
                      description: ID da redação pai. Se a redação for a redação pai, esse campo será `null`.
                      x-nullable: true
                    thereWasDiscrepancy:
                      type: boolean
                      description: Se houve discrepância nas correções das redações vinculadas a essa, a redação será corrigida novamente por outro corretor.
                correction:
                  type: object
                  description: Correção
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: ID da correção.
                    videoUrl:
                      type: string
                      description: URL do vídeo da correção, caso tenha. Se não tiver, esse campo será `null`.
                      x-nullable: true
                    video:
                      type: object
                      description: URL do vídeo da correção em diferentes formatos, caso tenha. Se não tiver, esse campo será `null`.
                      x-nullable: true
                      properties:
                        webm:
                          type: string
                          description: URL do vídeo da correção em formato `webm`.
                        mp4:
                          type: string
                          description: URL do vídeo da correção em formato `mp4`.
                    grades:
                      type: array
                      description: Notas da correção. Se a redação for denunciada, esse campo será `null`.
                      x-nullable: true
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            description: Nome do critério.
                          grade:
                            type: number
                            description: Nota.
                          error:
                            type: string
                            description: Descrição dos erros.
                            x-nullable: true
                    report:
                      type: object
                      description: Denúncia da redação. Se a redação não for denunciada, esse campo será `null`.
                      x-nullable: true
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: ID da denúncia.
                        name:
                          type: string
                          description: Nome da denúncia.
                    zeroReason:
                      type: object
                      description: Zerar redação. Se a redação não for zerada, esse campo será `null`.
                      x-nullable: true
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: ID da justificativa para zerar redação.
                        reason:
                          type: string
                          description: Nome da justificativa para zerar redação.
                essayImages:
                  type: array
                  description: Imagens da redação com a correção. Se a redação for denunciada, esse campo será `null`.
                  items:
                    type: object
                    properties:
                      image:
                        type: string
                        description: Imagem corrigida em base64.
                      order:
                        type: integer
                        description: Ordem da imagem.
                student:
                  type: object
                  description: Aluno
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: ID do aluno.
                    name:
                      type: string
                      description: Nome do aluno.
