openapi: 3.0.0
info:
  description: Documentação de Integração da Plataforma Pontue
  version: 1.0.0
  title: Pontue Integration Docs
  contact:
    email: fernandocandiani@pontue.com.br
    name: Fernando Candiani
servers:
  - url: https://{server}.pontue.com.br
    variables:
      server:
        default: api.dev
        enum:
          - api
          - api.dev
components:
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ResponseError:
      properties:
        message:
          type: string
          description: Descrição do erro.
tags:
  - name: OAuth
    description: Operações de autenticação via OAuth
  - name: Proposal
    description: Operações de propostas
  - name: Essay
    description: Operações de redações
paths:
  /oauth/token:
    post:
      tags:
        - OAuth
      summary: Obtém um token de acesso
      description: Obtém um token de acesso para fazer o login de um usuário.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  description: "O tipo de concessão da solicitação de token (<strong>Utilize</strong>: `client_credentials`)."
                  default: client_credentials
                client_id:
                  type: string
                  description: ID fornecido pela nossa equipe de TI.
                client_secret:
                  type: string
                  description: Token fornecido pela nossa equipe de TI.
              required:
                - grant_type
                - client_id
                - client_secret
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                properties:
                  token_type:
                    type: string
                    description: Tipo do token.
                  expires_in:
                    type: integer
                    description: Tempo de duração do token (em segundos).
                  access_token:
                    type: string
                    description: Token de acesso.
        401:
          description: Erro de autenticação
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    description: Tipo do erro.
                  error_description:
                    type: string
                    description: Descrição do erro.
                  message:
                    type: string
                    description: Mensagem do erro.
  /integrations/auth:
    post:
      tags:
        - OAuth
      summary: Login na Plataforma Pontue
      description: "
        Obtém dados de acesso do usuário.<br>
        No Header Authorization, utilizar o `token_type` + `access_token` retornado pelo endpoint `/oauth/token`. <br>
        <strong>Exemplo</strong>: `Authorization: Bearer eyJ0eXAiOiJ...`.<br>
        <strong>Porém, aqui na documentação, adicione apenas o `access_token`, pois o `token_type` é adicionado automaticamente</strong>.
      "
      security:
        - Authorization:
            - read
            - write
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Email do usuário cadastrado na Plataforma Pontue.
              required:
                - email
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: string
                            description: ID do usuário.
                          name:
                            type: string
                            description: Nome do usuário.
                          email:
                            type: string
                            description: Email do usuário.
                      role:
                        type: string
                        description: Nível de acesso do usuário.
                      student:
                        type: object
                        description: Caso o usuário seja um aluno
                        properties:
                          id:
                            type: string
                            description: ID do aluno.
                      school:
                        type: object
                        properties:
                          id:
                            type: string
                            description: ID da escola.
                          name:
                            type: string
                            description: Nome da escola.
                          isSaas:
                            type: integer
                            description: Tipo de modelo de negócio da escola.
                          isOnTrial:
                            type: boolean
                            description: Indica se a escola está em modo de teste.
                      schoolClass:
                        type: object
                        description: Caso o usuário seja um aluno
                        properties:
                          id:
                            type: string
                            description: ID da turma.
                      modules:
                        type: array
                        description: Módulos ativos da escola.
                        items:
                          type: string
                      access_token:
                        type: string
                        description: Token de acesso.
                      token_type:
                        type: string
                        description: Tipo do token.
                      expires_at:
                        type: string
                        description: Data de expiração do token (Y-m-d H:i:s).
                  meta:
                    type: object
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /integrations/proposal/create:
    post:
      tags:
        - Proposal
      summary: Criação de proposta
      description:
        <strong>OBS:</strong> Utilize o `access_token` retornado pelo endpoint `/oauth/token` para autenticação.
      security:
        - Authorization:
            - read
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: O nome da proposta
                gridId:
                  type: string
                  format: uuid
                  description: ID da grade da proposta
                subjectId:
                  type: string
                  format: uuid
                  description: O ID da disciplina (caso a proposta seja disponibilizada para uma disciplina)
                  nullable: true
                hasTask:
                  type: boolean
                  description: Indica se a proposta possui tarefa ou não
                  nullable: true
                  default: true
                isPontueCorrection:
                  type: boolean
                  description: Indica se a proposta é vai ser corrigida pelos time de corretores Pontue (utilize `true`) ou pelos professores da escola (utilize `false`)
                  nullable: true
                  default: false
                guidance:
                  type: string
                  description: Orientação para o corretor.
                comment:
                  type: string
                  description: Orientação para o aluno.
                file_labels:
                  type: array
                  description:
                    Labels dos arquivos.
                    Campo obrigatório se enviado arquivos.
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        description: ID do arquivo (explicado no atributo 'file-1').
                      label:
                        type: string
                        description: Título do arquivo que será apresentado ao usuário.
                      name:
                        type: string
                        description: O nome do arquivo que o usuário fez o upload.
                file-1:
                  type: string
                  format: binary
                  description: "
                    Arquivo para a proposta.<br><br>
                    <strong>Campo obrigatório se não enviado links.</strong><br>
                    <strong>Formatos permitidos: pdf, jpg, jpeg e png.</strong><br><br>
                    O `1` descrito no final do nome deste campo é o ID do arquivo especificado no campo `file_labels`.<br><br>
                    <strong>Exemplo</strong>:<br>
                    Com `file_labels[0].id: 'nomeDoArquivo1'`, o arquivo deve ter ser enviado com o seguinte nome do campo: `file-nomeDoArquivo1`.<br>
                    Com `file_labels[1].id: 'nomeDoArquivo2'`, o arquivo deve ter ser enviado com o seguinte nome do campo: `file-nomeDoArquivo2`.<br>
                  "
                file-2:
                  type: string
                  format: binary
                  description: "
                    Arquivo para a proposta.<br><br>
                    <strong>Campo obrigatório se não enviado links.</strong><br>
                    <strong>Formatos permitidos: pdf, jpg, jpeg e png.</strong><br><br>
                    O `2` descrito no final do nome deste campo é o ID do arquivo especificado no campo `file_labels`.<br><br>
                    <strong>Exemplo</strong>:<br>
                    Com `file_labels[0].id: 'nomeDoArquivo1'`, o arquivo deve ter ser enviado com o seguinte nome do campo: `file-nomeDoArquivo1`.<br>
                    Com `file_labels[1].id: 'nomeDoArquivo2'`, o arquivo deve ter ser enviado com o seguinte nome do campo: `file-nomeDoArquivo2`.<br>
                  "
                links:
                  type: array
                  description:
                    Links para a proposta.
                    Campo obrigatório se não enviado arquivos.
                  items:
                    type: object
                    properties:
                      url:
                        type: string
                        description: URL do link.
                      label:
                        type: string
                        description: Título do link que será apresentado ao usuário.
              required:
                - name
                - gridId
      responses:
        201:
          description: Created.
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      proposalId:
                        type: string
                        description: ID da proposta criada.
                  meta:
                    type: object
        400:
          description: Bad Request. Arquivo ou link inválido.
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: File is not valid.
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /integrations/essay/create:
    post:
      tags:
        - Essay
      summary: Criação de redação
      description:
        <strong>OBS:</strong> Utilize o `access_token` retornado pelo endpoint `/oauth/token` para autenticação.
      security:
        - Authorization:
            - read
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                proposalId:
                  type: string
                  format: uuid
                  description: ID da proposta.
                studentId:
                  type: string
                  format: uuid
                  description: ID do aluno.
                file:
                  type: array
                  description:
                    Arquivos com as imagens da redação (redação por foto).<br>
                    <strong>Obrigatório se não enviado `essayTypedText`.</strong><br>
                    <strong>Se enviado junto com `essayTypedText`, esse campo terá preferência!</strong>
                  items:
                    type: string
                    format: binary
                essayTypedText:
                  type: string
                  description:
                    Texto digitado pelo aluno (redação digitada).<br>
                    <strong>Obrigatório se não enviado `file`.</strong><br>
                    <strong>Se enviado junto com `file`, dará preferência para `file`!</strong>
                type:
                  type: object
                  nullable: true
                  description: "
                      Tipo da redação.<br><br>
                      <strong>type</strong>: (string) Tipo da redação (rewriting ou secondView).<br>
                      <strong>acceptedTerms</strong>: (boolean) Indica se o aluno aceitou os termos de uso do envio da reescrita da redação.<br>
                      <strong>gradeReason</strong>: (string) Motivo da nota para segunda vista da redação.<br>
                      <strong>correctorReason</strong>: (string) Motivo para o corretor para segunda vista da redação.<br>
                  "
                  properties:
                    type:
                      type: string
                      nullable: true
                    acceptedTerms:
                      type: boolean
                      nullable: true
                    gradeReason:
                      type: string
                      nullable: true
                    correctorReason:
                      type: string
                      nullable: true
              required:
                - proposalId
                - studentId
      responses:
        201:
          description: Created.
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      essay:
                        type: object
                        properties:
                          id:
                            type: string
                            description: ID da redação criada.
                          urls:
                            type: array
                            description: URLs das folhas da redação.
                            items:
                              type: object
                              properties:
                                url:
                                  type: string
                                  description: URL da folha.
                                order:
                                  type: integer
                                  description: Ordem da folha.
                  meta:
                    type: object
        400:
          description: Bad Request. Arquivo ou link inválido.
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: File is not valid.
        403:
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
